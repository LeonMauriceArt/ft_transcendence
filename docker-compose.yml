version: '3.8'

services:
  web:
    container_name: web
    networks:
      - ft_trans
    build:
      context: backend
      dockerfile: Dockerfile
    # Production command
    command: >
     sh -c "for i in $(seq 1 10); do echo 'Waiting for all containers to be done...'; sleep 1; done; daphne -u /usr/src/daphne_sock/daphne.sock -p 8000 -b 0.0.0.0 django_project.asgi:application"
    # Development command
    command: >
      sh -c "for i in $(seq 1 10); do echo 'Waiting for all containers to be done...'; sleep 1; done; python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/code
      - daphne-sock:/usr/src/daphne_sock
      - static_volume:/code/mystaticfiles
      - media_volume:/code/media
      - vault_data_web:/run/secrets:ro
    ports:
      - "8000:8000"
    depends_on:
      - vault

  db:
    container_name: postgres
    networks:
      - ft_trans
    image: postgres
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  nginx:
    container_name: nginx
    networks:
      - ft_trans
    build:
      context: nginx
    restart: always
    ports:
     - "8433:433"
    depends_on:
     - db
    volumes:
     - daphne-sock:/usr/src/daphne_sock
     - static_volume:/code/mystaticfiles:ro
     - media_volume:/code/media
    command: /bin/bash /startup.sh

  vault:
    container_name: vault
    user: '0:0'
    networks:
      - ft_trans
    build:
      context: vault
    ports:
      - "8200:8200"
    env_file:
      - .env
    volumes:
      - vault_data_web:/vault/data/skey
      - vault_data:/vault/data
    depends_on:
      - db
    cap_add:
      - IPC_LOCK
    command: /bin/sh /start_up.sh

volumes:
  media_volume:
  vault_data_web:
  postgres-data:
  daphne-sock:
  static_volume:
  vault_data:

networks:
  ft_trans:
    driver: bridge
